<style>
.fileUpload input.upload {
	position: absolute;
	top: 0;
	right: 0;
	margin: 0;
	padding: 0;
	font-size: 20px;
	cursor: pointer;
	opacity: 0;
	filter: alpha(opacity=0);
}
.import_div{
	font-size:16px;
}
.btn {
  background-image: none;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: inline-block;
  font-size: 14px;
  font-weight: normal;
  line-height: 1.42857;
  margin-bottom: 0;
  padding: 6px 12px;
  text-align: center;
  vertical-align: middle;
  white-space: nowrap;
}
.btn-info {
  background-image: linear-gradient(to bottom, #5bc0de 0px, #2aabd2 100%);
  background-repeat: repeat-x;
  border-color: #28a4c9;
}
.btn-primary {
  background-color: #535353;
  border-color: #535353;
  color: #fff;
  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
}
.btn-primary:hover {
    background-color: #0099e6;
    border-color: #0099e6;
    color: #fff;
}
</style>
<form action="<?php echo $this->getUrl('*/*/'); ?>" method="post" enctype="multipart/form-data"><br>
	<?php echo $this->getBlockHtml('formkey')?>
	<div class="import_div" style="font-size:16px;">
		Select File to import: <br/><br/>
	</div>
	<input class="btn btn-info" type="file" name="uploadFile"> <br/><br/>
	<input class="fileUpload btn btn-primary" name="upload_xml"  type="submit" value="Upload File">
</form>

<?php
/**
#    Copyright (C) 2013 Global Era (http://www.globalera.com). All Rights Reserved
#    @author Serenus Infotech magento@serenusinfotech.com
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see http://www.gnu.org/licenses/.
**/
ob_start();
set_time_limit(0);

$dir_root=Mage::getBaseDir();
$flag='0';

/* code for check file permission and file  start */
if(isset($_POST['upload_xml']))
{	
	// Write to custom log
	$customHelper = Mage::helper('customimport');
	$logPath 	  = Mage::getBaseDir('log').'/customimport.log';
	$filename = $_FILES["uploadFile"]['name'];
	$ext = pathinfo($filename, PATHINFO_EXTENSION);
	if($ext != "xml")
	{	
		$msg = "Please upload XML file only";
		$customHelper->writeCustomLog($msg, $logPath);
		$customHelper->sendLogEmail($logPath);
        echo "<br/><br/>".$msg."<br/><br/>";
		die;
	}
	$file = basename($filename, ".xml");
	$xmlPath = $dir_root.DS.'xmlfiles'.DS;
	if ( !file_exists($xmlPath) ) {
	  mkdir ($xmlPath, 0744);
	}
	if(!is_writable($xmlPath)){
		$msg = "Please give writable permission for file.";
		$customHelper->writeCustomLog('<span style="color:red;">'.$msg.'</span>', $logPath);
		$customHelper->sendLogEmail($logPath);
		echo "<br/><br/>".$msg."<br/><br/>";
        die;
	}
	$fileTmpLoc = $_FILES["uploadFile"]["tmp_name"];
	$pathAndName = $xmlPath.$filename;
	$moveResult = move_uploaded_file($fileTmpLoc, $pathAndName);
	chmod($pathAndName, 0777);

/* code for check file permission end */

/* code for reanme file after process start*/
$xmlPath = $pathAndName;
$today_date = date("Y-m-d_H-i-s");
$current_file_path=$xmlPath;
$new_error_file_path=$dir_root.DS.'xmlfiles'.DS.$file.'_'.$today_date.'_error.xml';
$new_completed_file_path=$dir_root.DS.'xmlfiles'.DS.$file.'_'.$today_date.'_completed.xml';

/* code for reanme file after process end*/

$t0=microtime(true);
unlink($logPath);
$this->parseXml($xmlPath);

// CATAGORY AND CATEGORYRELATION IMPORT

$categories =  $this->showCategory();

/* Code start for import categories */
try
{
    /* Code start for import categories */
    $categories =  $this->showCategory();
    $msgcollection = "";
	if($categories)
	{
       	$this->importAllCategory($categories);
     	$msg = "<br/><br/>Categories successfully imported<br/><br/>";
        echo "<br/><br/>".$msg."<br/><br/>";
	}else {
        $msg = "Categories not found.";
        $customHelper->writeCustomLog('<span style="color:blue;">'.$msg.'</span>', $logPath);
        echo "<br/><br/>".$msg."<br/><br/>";
    }
    
	$parseAndUpdateCategoryRelation = $this->parseAndUpdateCategoryRelation();
	if($parseAndUpdateCategoryRelation){
		  $msg = "<br/><br/>Category relations successfully imported<br/><br/>";
          echo "<br/><br/>".$msg."<br/><br/>";
	} else {
		$msg = "Category relations not found.";
		$customHelper->writeCustomLog('<span style="color:blue;">'.$msg.'</span>', $logPath);
        echo "<br/><br/>".$msg."<br/><br/>";
	}
	
	/* Code End for import categories */
	
	/* Code Start for import attributes */
	$parsedAttribute = $this->parseAttribute();
    if($parsedAttribute){
          $this->importAttribute($parsedAttribute);
    }
    $parsedAttributeSet = $this->parseAttributeSet();
    if($parsedAttributeSet){
         $this->importAttributeSet($parsedAttributeSet);
    }
    $parseAttributegrp = $this->parseAttributegrp();
    if($parseAttributegrp){
          $this->importAttributeGrp($parseAttributegrp);
          $msgcollection.=  "<br/><br/>Attributes are successfully imported<br/><br/>";
    } else {
    	$e = new Exception("Attributes not found.");
    	Mage::logException($e);
		$customHelper->writeCustomLog('<span style="color:blue;">'.$e->getMessage().'</span>', $logPath);
    	$msgcollection.=  '<span style="color:blue;">Attributes not found</span><br/>';
    }
	
    /* Code End for import attributes */
    
    /* Code Start for import Products */
    $products =  $this->showProducts();
    if($products){
        $this->importAllProducts($products,$current_file_path,$new_error_file_path);
        $msgcollection.=  "<br/><br/>Products are successfully imported<br/><br/>";
    }
    else{
        $msg = "No products found.";
		$customHelper->writeCustomLog('<span style="color:red;">'.$msg.'</span>', $logPath);
        $msgcollection.=  '<span style="color:blue;">'.$msg.'</span><br/>';
    }
    /* Code End for import Products */
    
    /* Code Start for category product association*/
    $associatedProductsCategory =  $this->associatedProductsCategory();
    if($associatedProductsCategory){
        $this->associateProducts($associatedProductsCategory);
    }else{
        $e = new Exception("Category-Product association not found.");
        Mage::logException($e);
		$customHelper->writeCustomLog('<span style="color:red;">'.$e->getMessage().'</span>', $logPath);
        $msgcollection.=  '<br/><br/>Category-Product association not found<br/><br/>';
    }
    /* Code End for category product association*/
    
    /* Code Start for product association*/
    $associatedProductsProducts =  $this->associatedProductsProducts();
    if($associatedProductsProducts){
           $this->associatePdtPdt($associatedProductsProducts);
    }else{
		if(($products->type == "configurable") || ($products->type == "bundle"))
		{
			$e = new Exception("Product-Product association not found.");
			Mage::logException($e);
			$customHelper->writeCustomLog('<span style="color:red;">'.$e->getMessage().'</span>', $logPath);
			$msgcollection.=  '<br/><br/>Product-Product association not found.<br/><br/>';
		}
    }
	
	/* Code End for product product association*/
    
}
catch(Exception $e)
{
	$flag='1';
	Mage::logException($e);
	$customHelper->writeCustomLog('<span style="color:red;">'.$e->getMessage().'</span>', $logPath);
	$customHelper->sendLogEmail($logPath);
}

/* Code start for change file name after complete*/
if($flag=='1')
{
	$is_exist=file_exists($current_file_path);
	if($is_exist=='1')
	{
		rename($current_file_path, $new_error_file_path);
	}
   	$finalImportStatus = 'Error in xml file to import';
}
else
{
	$is_exist=file_exists($current_file_path);
	if($is_exist=='1')
	{
		rename($current_file_path, $new_completed_file_path);
	}
   	$finalImportStatus =  '<span style="color:#009900;">Successfully imported to magento</span>';
   	echo $msgcollection ."<br/><br/>". $finalImportStatus.'<br/><br/>' ;
}
$customHelper->writeCustomLog($finalImportStatus, $logPath);
/* code end for change file name after complete*/
foreach($this->_log_array as $msg){
    echo $msg.'<br/><br/>';
}


$t1 = microtime(true);
$time = $t1-$t0;
echo "It took $time sec" ;

// SENDING MAIL CODE
if(isset($finalImportStatus)){
	$customHelper->sendLogEmail($logPath);
}
// SENDING EMAIL CODE ENDS

// CODE FOR INDEXING
$indexingProcesses = Mage::getSingleton('index/indexer')->getProcessesCollection();
foreach ($indexingProcesses as $process) {
    $process->reindexEverything();
}
ob_end_flush();
}

?>
